#version: '3.9'

services:

  telegram.bot-api_service:
    container_name: telegram.bot-api_container
    environment:
      POSTGRES_DATABASE: postgres
      POSTGRES_HOST: postgres_service
      POSTGRES_PORT: 5432
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      LOGGING_LEVEL_ROOT: INFO
    build:
      context: .
      dockerfile: DockerfileTelegramBotApi
#    volumes:
#      - ../..:/workspaces:cached
#    network_mode: service:postgres # !!!!!
#    command: sleep infinity
    ports:
      - "8088:8080"
    depends_on:
      - telegram.bot-engine_service

  telegram.bot-engine_service:
    container_name: telegram.bot-engine_container
    environment:
      POSTGRES_DATABASE: postgres
      POSTGRES_HOST: postgres_service
      POSTGRES_PORT: 5432
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      # todo Have to be hidden
      TELEGRAM_BOT_NAME: TO_DEFINE
      TELEGRAM_BOT_OWNER: TO_DEFINE
      TELEGRAM_BOT_TOKEN: TO_DEFINE
      LOGGING_LEVEL_ROOT: INFO
    build:
      context: .
      dockerfile: DockerfileTelegramBotEngine
#    volumes:
#      - ../..:/workspaces:cached
    #    network_mode: service:postgres # !!!!!
    #    command: sleep infinity
#    ports:
#      - "8088:8080"
    depends_on:
      - postgres_service

  postgres_service:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    # todo Later hate to be hidden
    ports:
      - "5430:5432"
# todo Make with Volumes
#    volumes:
#      - ./pgdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

#volumes:
#  pgdata:
#    driver: local